@model List<ProductImageViewModel>

@if (Model != null && Model.Any())
{
  int activeIndex = Model.FindIndex(img => img.IsPrimary);

  <div id="productImageCarousel" class="carousel slide"
       data-bs-ride="false">
    @* Carousel indicators *@
    <div class="carousel-indicators">
      @for (int i = 0; i < Model.Count; i++)
      {
        <button class="@(i == activeIndex ? "active" : "")"
                type="button"
                data-bs-target="#productImageCarousel"
                data-bs-slide-to="@i"
                aria-current="@(i == activeIndex ? "true" : "false")"
                aria-label="Image @(i + 1)">
        </button>
      }
    </div>

    @* Carousel inner content (images) *@
    <div class="carousel-inner">
      @for (int i = 0; i < Model.Count; i++)
      {
        var image = Model[i];

        <div class="carousel-item @(i == activeIndex ? "active" : "")">
          <img class="img-fluid" src="@image.Url"
               alt="Product Image @(i + 1)">
        </div>
      }
    </div>

    @* Carousel controls *@
    <button class="carousel-control-prev" type="button" data-bs-target="#productImageCarousel" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#productImageCarousel" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
}
else
{
  <p>No images available.</p>
}