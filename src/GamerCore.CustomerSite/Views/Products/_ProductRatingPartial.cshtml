@model (double AverageRating, int? ReviewCount, bool IsCompact)

<div class="d-flex align-items-center">
  <div>
    @for (int i = 1; i <= 5; i++)
    {
      if (Model.AverageRating >= i)
      {
        <i class="bi bi-star-fill text-warning @(Model.IsCompact ? "small" : "")"></i>
      }
      else if (Model.AverageRating >= i - 0.5)
      {
        <i class="bi bi-star-half text-warning @(Model.IsCompact ? "small" : "")"></i>
      }
      else
      {
        <i class="bi bi-star text-warning @(Model.IsCompact ? "small" : "")"></i>
      }
    }
  </div>

  @if (Model.IsCompact)
  {
    <!-- Compact version -->
    <span class="ms-2 small fw-bold">@Model.AverageRating.ToString("0.0")</span>

    @if (Model.ReviewCount.HasValue && Model.ReviewCount.Value > 0)
    {
      <span class="ms-2 text-muted">
        (@Model.ReviewCount)
      </span>
    }
  }
  else
  {
    <!-- Full version -->
    <span class="ms-2 fw-bold">@Model.AverageRating.ToString("0.0")</span>

    @if (Model.ReviewCount.HasValue && Model.ReviewCount.Value > 0)
    {
      <span class="ms-2 text-muted">
        (@Model.ReviewCount @(Model.ReviewCount == 1 ? "review" : "reviews"))
      </span>
    }
  }
</div>

@* OLD
<div class="d-flex align-items-center text-muted">
  @for (int i = 1; i <= 5; i++)
  {
    if (Model.AverageRating >= i)
    {
      <i class="bi bi-star-fill text-warning"></i>
    }
    else if (Model.AverageRating >= i - 0.5)
    {
      <i class="bi bi-star-half text-warning"></i>
    }
    else
    {
      <i class="bi bi-star text-warning"></i>
    }
  }
  @if (Model.ReviewCount != null)
  {
    <span class="ms-2">(@Model.ReviewCount)</span>
  }
</div>
*@